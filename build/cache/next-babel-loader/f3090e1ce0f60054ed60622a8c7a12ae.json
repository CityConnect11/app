{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _context = require(\"./context\");\n\nvar _MapComponent2 = _interopRequireDefault(require(\"./MapComponent\"));\n\nvar MapLayer = /*#__PURE__*/function (_MapComponent) {\n  (0, _inheritsLoose2.default)(MapLayer, _MapComponent);\n\n  function MapLayer(props) {\n    var _this;\n\n    _this = _MapComponent.call(this, props) || this;\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"contextValue\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"leafletElement\", void 0);\n    _this.leafletElement = _this.createLeafletElement(props);\n    return _this;\n  }\n\n  var _proto = MapLayer.prototype;\n\n  _proto.createLeafletElement = function createLeafletElement(_props) {\n    throw new Error('createLeafletElement() must be implemented');\n  };\n\n  _proto.updateLeafletElement = function updateLeafletElement(_fromProps, _toProps) {};\n\n  _proto.componentDidMount = function componentDidMount() {\n    _MapComponent.prototype.componentDidMount.call(this);\n\n    this.layerContainer.addLayer(this.leafletElement);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    _MapComponent.prototype.componentDidUpdate.call(this, prevProps);\n\n    if (this.props.attribution !== prevProps.attribution) {\n      var map = this.props.leaflet.map;\n\n      if (map != null && map.attributionControl != null) {\n        map.attributionControl.removeAttribution(prevProps.attribution);\n        map.attributionControl.addAttribution(this.props.attribution);\n      }\n    }\n\n    this.updateLeafletElement(prevProps, this.props);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    _MapComponent.prototype.componentWillUnmount.call(this);\n\n    this.layerContainer.removeLayer(this.leafletElement);\n  };\n\n  _proto.render = function render() {\n    var children = this.props.children;\n\n    if (children == null) {\n      return null;\n    }\n\n    return this.contextValue == null ? _react.default.createElement(_react.Fragment, null, children) : _react.default.createElement(_context.LeafletProvider, {\n      value: this.contextValue\n    }, children);\n  };\n\n  (0, _createClass2.default)(MapLayer, [{\n    key: \"layerContainer\",\n    get: function get() {\n      return this.props.leaflet.layerContainer || this.props.leaflet.map;\n    }\n  }]);\n  return MapLayer;\n}(_MapComponent2.default);\n\nexports.default = MapLayer;","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _reactDom = require(\"react-dom\");\n\nvar _MapComponent2 = _interopRequireDefault(require(\"./MapComponent\"));\n\nvar _updateClassName = _interopRequireDefault(require(\"./utils/updateClassName\"));\n\nvar DivOverlay = /*#__PURE__*/function (_MapComponent) {\n  (0, _inheritsLoose2.default)(DivOverlay, _MapComponent);\n\n  function DivOverlay(props) {\n    var _this;\n\n    _this = _MapComponent.call(this, props) || this;\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"onClose\", function () {\n      if (_this.props.onClose) {\n        _this.props.onClose();\n      }\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"onOpen\", function () {\n      _this.forceUpdate(); // Re-render now that leafletElement is created\n\n\n      if (_this.props.onOpen) {\n        _this.props.onOpen();\n      }\n    });\n    _this.leafletElement = _this.createLeafletElement(props);\n    return _this;\n  }\n\n  var _proto = DivOverlay.prototype;\n\n  _proto.createLeafletElement = function createLeafletElement(_props) {\n    throw new Error('createLeafletElement() must be implemented');\n  };\n\n  _proto.updateLeafletElement = function updateLeafletElement(_prevProps, _props) {};\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    (0, _updateClassName.default)(this.leafletElement._container, prevProps.className, this.props.className);\n    this.updateLeafletElement(prevProps, this.props);\n\n    if (this.leafletElement.isOpen()) {\n      this.leafletElement.update();\n      this.onRender();\n    }\n  };\n\n  _proto.onRender = function onRender() {};\n\n  _proto.render = function render() {\n    if (this.leafletElement._contentNode) {\n      return (0, _reactDom.createPortal)(this.props.children, this.leafletElement._contentNode);\n    }\n\n    return null;\n  };\n\n  return DivOverlay;\n}(_MapComponent2.default);\n\nexports.default = DivOverlay;","map":null,"metadata":{},"sourceType":"script"}